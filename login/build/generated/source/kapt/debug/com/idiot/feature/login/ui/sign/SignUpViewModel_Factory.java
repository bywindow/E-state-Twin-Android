// Generated by Dagger (https://dagger.dev).
package com.idiot.feature.login.ui.sign;

import android.app.Application;
import com.idiot.data.repository.UserSignUpRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SignUpViewModel_Factory implements Factory<SignUpViewModel> {
  private final Provider<Application> applicationProvider;

  private final Provider<UserSignUpRepository> userSignUpRepositoryProvider;

  public SignUpViewModel_Factory(Provider<Application> applicationProvider,
      Provider<UserSignUpRepository> userSignUpRepositoryProvider) {
    this.applicationProvider = applicationProvider;
    this.userSignUpRepositoryProvider = userSignUpRepositoryProvider;
  }

  @Override
  public SignUpViewModel get() {
    return newInstance(applicationProvider.get(), userSignUpRepositoryProvider.get());
  }

  public static SignUpViewModel_Factory create(Provider<Application> applicationProvider,
      Provider<UserSignUpRepository> userSignUpRepositoryProvider) {
    return new SignUpViewModel_Factory(applicationProvider, userSignUpRepositoryProvider);
  }

  public static SignUpViewModel newInstance(Application application,
      UserSignUpRepository userSignUpRepository) {
    return new SignUpViewModel(application, userSignUpRepository);
  }
}
