// Generated by data binding compiler. Do not edit!
package com.idiot.more.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.idiot.more.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentRegisterHouseInfoBinding extends ViewDataBinding {
  @NonNull
  public final EditText areaInput;

  @NonNull
  public final TextView areaTitle;

  @NonNull
  public final EditText buildingCurrentFloorInput;

  @NonNull
  public final EditText buildingNameInput;

  @NonNull
  public final EditText buildingTotalFloorInput;

  @NonNull
  public final Spinner buildingTypeSelector;

  @NonNull
  public final AppCompatButton closeButton;

  @NonNull
  public final TextView currentFloorTitle;

  @NonNull
  public final TextView duplexTitle;

  @NonNull
  public final TextView elevatorTitle;

  @NonNull
  public final AppCompatButton hasDuplexButton;

  @NonNull
  public final AppCompatButton hasElevatorButton;

  @NonNull
  public final AppCompatButton hasNotDuplexButton;

  @NonNull
  public final AppCompatButton hasNotElevatorButton;

  @NonNull
  public final AppCompatButton hasNotVerandaButton;

  @NonNull
  public final AppCompatButton hasVerandaButton;

  @NonNull
  public final Spinner heatTypeSelector;

  @NonNull
  public final FrameLayout houseInfoLayout;

  @NonNull
  public final ConstraintLayout houseInfoTitle;

  @NonNull
  public final EditText netAreaInput;

  @NonNull
  public final TextView netAreaTitle;

  @NonNull
  public final Spinner roomTypeSelector;

  @NonNull
  public final AppCompatButton shortAbleButton;

  @NonNull
  public final AppCompatButton shortDisableButton;

  @NonNull
  public final TextView shortTermTitle;

  @NonNull
  public final TextView totalFloorTitle;

  @NonNull
  public final TextView verandaTitle;

  protected FragmentRegisterHouseInfoBinding(Object _bindingComponent, View _root,
      int _localFieldCount, EditText areaInput, TextView areaTitle,
      EditText buildingCurrentFloorInput, EditText buildingNameInput,
      EditText buildingTotalFloorInput, Spinner buildingTypeSelector, AppCompatButton closeButton,
      TextView currentFloorTitle, TextView duplexTitle, TextView elevatorTitle,
      AppCompatButton hasDuplexButton, AppCompatButton hasElevatorButton,
      AppCompatButton hasNotDuplexButton, AppCompatButton hasNotElevatorButton,
      AppCompatButton hasNotVerandaButton, AppCompatButton hasVerandaButton,
      Spinner heatTypeSelector, FrameLayout houseInfoLayout, ConstraintLayout houseInfoTitle,
      EditText netAreaInput, TextView netAreaTitle, Spinner roomTypeSelector,
      AppCompatButton shortAbleButton, AppCompatButton shortDisableButton, TextView shortTermTitle,
      TextView totalFloorTitle, TextView verandaTitle) {
    super(_bindingComponent, _root, _localFieldCount);
    this.areaInput = areaInput;
    this.areaTitle = areaTitle;
    this.buildingCurrentFloorInput = buildingCurrentFloorInput;
    this.buildingNameInput = buildingNameInput;
    this.buildingTotalFloorInput = buildingTotalFloorInput;
    this.buildingTypeSelector = buildingTypeSelector;
    this.closeButton = closeButton;
    this.currentFloorTitle = currentFloorTitle;
    this.duplexTitle = duplexTitle;
    this.elevatorTitle = elevatorTitle;
    this.hasDuplexButton = hasDuplexButton;
    this.hasElevatorButton = hasElevatorButton;
    this.hasNotDuplexButton = hasNotDuplexButton;
    this.hasNotElevatorButton = hasNotElevatorButton;
    this.hasNotVerandaButton = hasNotVerandaButton;
    this.hasVerandaButton = hasVerandaButton;
    this.heatTypeSelector = heatTypeSelector;
    this.houseInfoLayout = houseInfoLayout;
    this.houseInfoTitle = houseInfoTitle;
    this.netAreaInput = netAreaInput;
    this.netAreaTitle = netAreaTitle;
    this.roomTypeSelector = roomTypeSelector;
    this.shortAbleButton = shortAbleButton;
    this.shortDisableButton = shortDisableButton;
    this.shortTermTitle = shortTermTitle;
    this.totalFloorTitle = totalFloorTitle;
    this.verandaTitle = verandaTitle;
  }

  @NonNull
  public static FragmentRegisterHouseInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_register_house_info, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentRegisterHouseInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentRegisterHouseInfoBinding>inflateInternal(inflater, R.layout.fragment_register_house_info, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentRegisterHouseInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_register_house_info, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentRegisterHouseInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentRegisterHouseInfoBinding>inflateInternal(inflater, R.layout.fragment_register_house_info, null, false, component);
  }

  public static FragmentRegisterHouseInfoBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentRegisterHouseInfoBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (FragmentRegisterHouseInfoBinding)bind(component, view, R.layout.fragment_register_house_info);
  }
}
